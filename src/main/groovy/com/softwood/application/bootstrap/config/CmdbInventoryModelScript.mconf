package com.softwood.application.bootstrap.config


import com.softwood.cmdb.Customer
import com.softwood.cmdb.Site
import com.softwood.cmdb.views.Application
import com.softwood.cmdb.views.ConnectionService
import com.softwood.cmdb.views.Device
import com.softwood.request.ProductOffering

import java.util.concurrent.ConcurrentLinkedQueue

// set this value to determine the order that config files will be run
// any globally required value should be set to the binding
// ensure that any dependant scripts run with higher order value than the script that
// sets the required value in the binding.  Multiple non dependant scripts can run at same level
def runConfigInOrder = 2

Binding binding = getBinding()

binding.inventory = new ConcurrentLinkedQueue()

Customer hsbc = binding.customers[0]

Site hqsite = hsbc.sites[0]
Site dc = hsbc.sites[1]

Device router = new Device(name: "Wan gateway ASR", category: "Router", hostname: "UK-LON-ROUTER-CWHQ", ipAddress: "192.168.1.60", managementIpAddress: "192.168.1.24", alias: "access router")
router.customer = hsbc
router.site = hqsite

Device custSwitch = new Device(name: "floor switch", category: "Switch", hostname: "UK-LON-SWITCH-CWHQ", ipAddress: "192.168.2.78", managementIpAddress: "192.168.2.50", alias: "floor switch ")
custSwitch.customer = hsbc
custSwitch.site = hqsite

ConnectionService cct = new ConnectionService(name: "ipvpn WAN connection ", bandwith: "10G", loopbackIpAddress: "192.168.5.80")
cct.customer = hsbc
cct.site = hqsite

router.addRelationshipTo(cct, "connected to")  //one way

inventory << router << custSwitch << cct

binding.products = new ConcurrentLinkedQueue()
ProductOffering prodOffer = new ProductOffering(name: "vxlan extension service", type: "connection service")

products << prodOffer

//security
prodOffer = new ProductOffering(name: "Secure Connection", type: "security service")
products << prodOffer


Application app = new Application(name: "CRM", software: "Siebel")
app.customer = hsbc
app.site = dc

inventory << app

println "ci  $router for $router.customer"
println "router relationships : " + router.getRelationships()